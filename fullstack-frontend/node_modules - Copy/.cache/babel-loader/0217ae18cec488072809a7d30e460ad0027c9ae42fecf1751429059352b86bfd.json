{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\moumi\\\\OneDrive\\\\moumita_cap12_007\\\\moumita_cap12_007\\\\fullstack-frontend\\\\fullstack-frontend\\\\src\\\\context\\\\AuthContext.jsx\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState, useEffect } from \"react\";\n\n// Create the AuthContext\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AuthContext = /*#__PURE__*/createContext();\n\n// AuthProvider component to wrap the application\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [auth, setAuth] = useState(() => {\n    // Load auth state from localStorage\n    const token = localStorage.getItem(\"accessToken\");\n    return token ? {\n      isAuthenticated: true,\n      token\n    } : null;\n  });\n  useEffect(() => {\n    // Automatically update token in localStorage when auth changes\n    if (auth !== null && auth !== void 0 && auth.token) {\n      localStorage.setItem(\"accessToken\", auth.token);\n    } else {\n      localStorage.removeItem(\"accessToken\");\n    }\n  }, [auth]);\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      auth,\n      setAuth\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"kme4jkb/GvrEUM32f6FpSlwGjEk=\");\n_c = AuthProvider;\nexport default AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","auth","setAuth","token","localStorage","getItem","isAuthenticated","setItem","removeItem","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/moumi/OneDrive/moumita_cap12_007/moumita_cap12_007/fullstack-frontend/fullstack-frontend/src/context/AuthContext.jsx"],"sourcesContent":["import React, { createContext, useState, useEffect } from \"react\";\r\n\r\n// Create the AuthContext\r\nexport const AuthContext = createContext();\r\n\r\n// AuthProvider component to wrap the application\r\nexport const AuthProvider = ({ children }) => {\r\n  const [auth, setAuth] = useState(() => {\r\n    // Load auth state from localStorage\r\n    const token = localStorage.getItem(\"accessToken\");\r\n    return token ? { isAuthenticated: true, token } : null;\r\n  });\r\n\r\n  useEffect(() => {\r\n    // Automatically update token in localStorage when auth changes\r\n    if (auth?.token) {\r\n      localStorage.setItem(\"accessToken\", auth.token);\r\n    } else {\r\n      localStorage.removeItem(\"accessToken\");\r\n    }\r\n  }, [auth]);\r\n\r\n  return (\r\n    <AuthContext.Provider value={{ auth, setAuth }}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport default AuthProvider;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;;AAEjE;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,OAAO,MAAMC,WAAW,gBAAGL,aAAa,CAAC,CAAC;;AAE1C;AACA,OAAO,MAAMM,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC5C,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGT,QAAQ,CAAC,MAAM;IACrC;IACA,MAAMU,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,aAAa,CAAC;IACjD,OAAOF,KAAK,GAAG;MAAEG,eAAe,EAAE,IAAI;MAAEH;IAAM,CAAC,GAAG,IAAI;EACxD,CAAC,CAAC;EAEFT,SAAS,CAAC,MAAM;IACd;IACA,IAAIO,IAAI,aAAJA,IAAI,eAAJA,IAAI,CAAEE,KAAK,EAAE;MACfC,YAAY,CAACG,OAAO,CAAC,aAAa,EAAEN,IAAI,CAACE,KAAK,CAAC;IACjD,CAAC,MAAM;MACLC,YAAY,CAACI,UAAU,CAAC,aAAa,CAAC;IACxC;EACF,CAAC,EAAE,CAACP,IAAI,CAAC,CAAC;EAEV,oBACEL,OAAA,CAACC,WAAW,CAACY,QAAQ;IAACC,KAAK,EAAE;MAAET,IAAI;MAAEC;IAAQ,CAAE;IAAAH,QAAA,EAC5CA;EAAQ;IAAAY,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;AAACd,EAAA,CArBWF,YAAY;AAAAiB,EAAA,GAAZjB,YAAY;AAuBzB,eAAeA,YAAY;AAAC,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}