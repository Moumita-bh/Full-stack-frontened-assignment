{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\moumi\\\\OneDrive\\\\moumita_cap12_007\\\\moumita_cap12_007\\\\fullstack-frontend\\\\fullstack-frontend\\\\src\\\\pages\\\\ProductsPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProductsPage = () => {\n  _s();\n  const [products, setProducts] = useState([]);\n  const [error, setError] = useState('');\n  const token = localStorage.getItem('accessToken'); // Simulate token retrieval\n\n  useEffect(() => {\n    // If no token, set error and return\n    if (!token) {\n      setError('You must be logged in to view products');\n      return;\n    }\n\n    // Fetch products from a public API\n    fetch('https://fakestoreapi.com/products', {\n      method: 'GET',\n      headers: {\n        Authorization: `Bearer ${token}` // Include token in the request header\n      }\n    }).then(response => {\n      if (!response.ok) {\n        throw new Error('Failed to fetch products');\n      }\n      return response.json();\n    }).then(data => {\n      setProducts(data);\n    }).catch(error => {\n      setError(error.message);\n    });\n  }, [token]);\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"page-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Product Management\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this), products.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: products.map(product => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: product.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Price: $\", product.price]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: product.image,\n          alt: product.title,\n          style: {\n            width: '100px',\n            height: '100px'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 29\n        }, this)]\n      }, product.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No products available.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }, this);\n};\n_s(ProductsPage, \"DFT6PhGKyt639JJBg8bYJuxa5rg=\");\n_c = ProductsPage;\nexport default ProductsPage;\nvar _c;\n$RefreshReg$(_c, \"ProductsPage\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","ProductsPage","_s","products","setProducts","error","setError","token","localStorage","getItem","fetch","method","headers","Authorization","then","response","ok","Error","json","data","catch","message","children","fileName","_jsxFileName","lineNumber","columnNumber","className","length","map","product","title","price","src","image","alt","style","width","height","id","_c","$RefreshReg$"],"sources":["C:/Users/moumi/OneDrive/moumita_cap12_007/moumita_cap12_007/fullstack-frontend/fullstack-frontend/src/pages/ProductsPage.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\n\r\nconst ProductsPage = () => {\r\n    const [products, setProducts] = useState([]);\r\n    const [error, setError] = useState('');\r\n    const token = localStorage.getItem('accessToken'); // Simulate token retrieval\r\n\r\n    useEffect(() => {\r\n        // If no token, set error and return\r\n        if (!token) {\r\n            setError('You must be logged in to view products');\r\n            return;\r\n        }\r\n\r\n        // Fetch products from a public API\r\n        fetch('https://fakestoreapi.com/products', {\r\n            method: 'GET',\r\n            headers: {\r\n                Authorization: `Bearer ${token}`, // Include token in the request header\r\n            },\r\n        })\r\n            .then((response) => {\r\n                if (!response.ok) {\r\n                    throw new Error('Failed to fetch products');\r\n                }\r\n                return response.json();\r\n            })\r\n            .then((data) => {\r\n                setProducts(data);\r\n            })\r\n            .catch((error) => {\r\n                setError(error.message);\r\n            });\r\n    }, [token]);\r\n\r\n    if (error) {\r\n        return <div>{error}</div>;\r\n    }\r\n\r\n    return (\r\n        <div className=\"page-container\">\r\n            <h1>Product Management</h1>\r\n            {products.length > 0 ? (\r\n                <ul>\r\n                    {products.map((product) => (\r\n                        <li key={product.id}>\r\n                            <h3>{product.title}</h3>\r\n                            <p>Price: ${product.price}</p>\r\n                            <img src={product.image} alt={product.title} style={{ width: '100px', height: '100px' }} />\r\n                        </li>\r\n                    ))}\r\n                </ul>\r\n            ) : (\r\n                <p>No products available.</p>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ProductsPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}